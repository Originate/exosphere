package util

import "time"

// WaitForf waits a maximum of given duration until the given condition to become true
// returning the error generated by errorFun
func WaitForf(condition func() bool, errorFn func() error, duration int) error {
	success := make(chan bool, 1)

	go func() {
		for {
			time.Sleep(time.Millisecond)
			if condition() {
				success <- true
				break
			}
		}
	}()

	select {
	case <-success:
		return nil
	case <-time.After(time.Second * time.Duration(duration)):
		return errorFn()
	}
}
