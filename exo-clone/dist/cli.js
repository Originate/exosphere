// Generated by LiveScript 1.5.0
var AppCloner, ref$, red, cyan, blue, yaml, Logger, path, flatten, clone;
AppCloner = require('./app-cloner');
ref$ = require('chalk'), red = ref$.red, cyan = ref$.cyan, blue = ref$.blue;
yaml = require('js-yaml');
Logger = require('../../exosphere-shared').Logger;
path = require('path');
flatten = require('prelude-ls').flatten;
clone = function(){
  var ref$, _, repoOrigin, repository, logger, x$;
  if (process.argv[2] === "help") {
    return help();
  }
  console.log('We are going to clone an Exosphere application!\n');
  ref$ = process.argv, _ = ref$[0], _ = ref$[1], repoOrigin = ref$[2];
  if (!repoOrigin) {
    return missingOrigin();
  }
  repository = repoInfo(repoOrigin);
  logger = new Logger;
  x$ = new AppCloner({
    repository: repository,
    logger: logger
  });
  x$.on('done', function(){
    return logger.log({
      role: 'exo-clone',
      text: 'Done'
    });
  });
  x$.start();
  return x$;
};
function repoInfo(origin){
  var repoName, repoPath, repo;
  repoName = path.basename(origin, '.git');
  repoPath = path.join(process.cwd(), repoName);
  return repo = {
    name: repoName,
    origin: origin,
    path: repoPath
  };
}
function missingOrigin(){
  console.log(red("Error: missing repository origin"));
  return printUsage();
}
function printUsage(){
  return console.log('Usage: exo clone <origin>\n');
}
function help(){
  var helpMessage;
  helpMessage = "\nUsage: " + cyan('exo clone') + " " + blue('[<repository>]') + "\n\nClones an exosphere application hosted on git, including all required services\nThis command should be called from an empty working directory.";
  return console.log(helpMessage);
}
module.exports = clone;