// Generated by LiveScript 1.5.0
var AppSetup, ref$, cyan, green, yaml, Logger, fs, flatten;
AppSetup = require('./app-setup');
ref$ = require('chalk'), cyan = ref$.cyan, green = ref$.green;
yaml = require('js-yaml');
Logger = require('../../exosphere-shared').Logger;
fs = require('fs');
flatten = require('prelude-ls').flatten;
module.exports = function(){
  var appConfig, logger, type, x$, appSetup;
  if (process.argv[2] === 'help') {
    return help();
  }
  appConfig = yaml.safeLoad(fs.readFileSync('application.yml', 'utf8'));
  console.log("Setting up " + green(appConfig.name) + " " + cyan(appConfig.version) + "\n");
  logger = new Logger(flatten((function(){
    var results$ = [];
    for (type in appConfig.services) {
      if (appConfig.services[type]) {
        results$.push(Object.keys(appConfig.services[type]));
      }
    }
    return results$;
  }())));
  x$ = appSetup = new AppSetup({
    appConfig: appConfig,
    logger: logger
  });
  x$.startSetup();
  return x$;
};
function help(){
  var helpMessage;
  helpMessage = "Usage: " + cyan("exo setup") + "\n\nSets up an Exosphere application so that it is ready to be run.\nThe setup process includes:\n  - locally installing dependencies of all application services\n  - generating docker images for the application services\n  - downloading the Exocom Docker image\n\nThis command must be run in the root directory of the application.";
  return console.log(helpMessage);
}