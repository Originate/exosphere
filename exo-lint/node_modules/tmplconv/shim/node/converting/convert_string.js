/**
 * Convert string.
 * @function convertString
 * @param {string} source - Source string to convert.
 * @param {object} rule - Convert map.
 * @returns {string} - Converted string.
 */

'use strict';

/** @lends convertString */

var _keys = require('babel-runtime/core-js/object/keys');

var _keys2 = _interopRequireDefault(_keys);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function convertString(source, rule) {
  var result = String(source);
  (0, _keys2.default)(rule).forEach(function (key) {
    var regExp = new RegExp(key, 'g');
    var replacings = [].concat(rule[key]);
    replacings.map(function (replacing) {
      result = result.replace(regExp, replacing);
    });
  });
  return result;
}

module.exports = convertString;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbnZlcnRfc3RyaW5nLmpzIl0sIm5hbWVzIjpbImNvbnZlcnRTdHJpbmciLCJzb3VyY2UiLCJydWxlIiwicmVzdWx0IiwiU3RyaW5nIiwiZm9yRWFjaCIsImtleSIsInJlZ0V4cCIsIlJlZ0V4cCIsInJlcGxhY2luZ3MiLCJjb25jYXQiLCJtYXAiLCJyZXBsYWNpbmciLCJyZXBsYWNlIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7O0FBUUE7O0FBRUE7Ozs7Ozs7O0FBQ0EsU0FBU0EsYUFBVCxDQUF3QkMsTUFBeEIsRUFBZ0NDLElBQWhDLEVBQXNDO0FBQ3BDLE1BQUlDLFNBQVNDLE9BQU9ILE1BQVAsQ0FBYjtBQUNBLHNCQUFZQyxJQUFaLEVBQWtCRyxPQUFsQixDQUEwQixVQUFDQyxHQUFELEVBQVM7QUFDakMsUUFBSUMsU0FBUyxJQUFJQyxNQUFKLENBQVdGLEdBQVgsRUFBZ0IsR0FBaEIsQ0FBYjtBQUNBLFFBQUlHLGFBQWEsR0FBR0MsTUFBSCxDQUFVUixLQUFNSSxHQUFOLENBQVYsQ0FBakI7QUFDQUcsZUFBV0UsR0FBWCxDQUFlLFVBQUNDLFNBQUQsRUFBZTtBQUM1QlQsZUFBU0EsT0FBT1UsT0FBUCxDQUFlTixNQUFmLEVBQXVCSyxTQUF2QixDQUFUO0FBQ0QsS0FGRDtBQUdELEdBTkQ7QUFPQSxTQUFPVCxNQUFQO0FBQ0Q7O0FBRURXLE9BQU9DLE9BQVAsR0FBaUJmLGFBQWpCIiwiZmlsZSI6ImNvbnZlcnRfc3RyaW5nLmpzIiwic291cmNlUm9vdCI6ImxpYiIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ29udmVydCBzdHJpbmcuXG4gKiBAZnVuY3Rpb24gY29udmVydFN0cmluZ1xuICogQHBhcmFtIHtzdHJpbmd9IHNvdXJjZSAtIFNvdXJjZSBzdHJpbmcgdG8gY29udmVydC5cbiAqIEBwYXJhbSB7b2JqZWN0fSBydWxlIC0gQ29udmVydCBtYXAuXG4gKiBAcmV0dXJucyB7c3RyaW5nfSAtIENvbnZlcnRlZCBzdHJpbmcuXG4gKi9cblxuJ3VzZSBzdHJpY3QnXG5cbi8qKiBAbGVuZHMgY29udmVydFN0cmluZyAqL1xuZnVuY3Rpb24gY29udmVydFN0cmluZyAoc291cmNlLCBydWxlKSB7XG4gIGxldCByZXN1bHQgPSBTdHJpbmcoc291cmNlKVxuICBPYmplY3Qua2V5cyhydWxlKS5mb3JFYWNoKChrZXkpID0+IHtcbiAgICBsZXQgcmVnRXhwID0gbmV3IFJlZ0V4cChrZXksICdnJylcbiAgICBsZXQgcmVwbGFjaW5ncyA9IFtdLmNvbmNhdChydWxlWyBrZXkgXSlcbiAgICByZXBsYWNpbmdzLm1hcCgocmVwbGFjaW5nKSA9PiB7XG4gICAgICByZXN1bHQgPSByZXN1bHQucmVwbGFjZShyZWdFeHAsIHJlcGxhY2luZylcbiAgICB9KVxuICB9KVxuICByZXR1cm4gcmVzdWx0XG59XG5cbm1vZHVsZS5leHBvcnRzID0gY29udmVydFN0cmluZ1xuIl19