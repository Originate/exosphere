/**
 * @function doUnlink
 * @returns {Promise}
 */
'use strict';

var _regenerator = require('babel-runtime/regenerator');

var _regenerator2 = _interopRequireDefault(_regenerator);

var _promise = require('babel-runtime/core-js/promise');

var _promise2 = _interopRequireDefault(_promise);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var fs = require('fs');
var co = require('co');

/** @lends doUnlink */
function doUnlink(filename, force) {
  return co(_regenerator2.default.mark(function _callee() {
    return _regenerator2.default.wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            if (!force) {
              _context.next = 3;
              break;
            }

            _context.next = 3;
            return new _promise2.default(function (resolve, reject) {
              return fs.chmod(filename, '666', function (err) {
                return err ? reject(err) : resolve();
              });
            });

          case 3:
            _context.next = 5;
            return new _promise2.default(function (resolve, reject) {
              return fs.unlink(filename, function (err) {
                return err ? reject(err) : resolve();
              });
            });

          case 5:
          case 'end':
            return _context.stop();
        }
      }
    }, _callee, this);
  }));
}

module.exports = doUnlink;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRvX3VubGluay5qcyJdLCJuYW1lcyI6WyJmcyIsInJlcXVpcmUiLCJjbyIsImRvVW5saW5rIiwiZmlsZW5hbWUiLCJmb3JjZSIsInJlc29sdmUiLCJyZWplY3QiLCJjaG1vZCIsImVyciIsInVubGluayIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiJBQUFBOzs7O0FBSUE7Ozs7Ozs7Ozs7OztBQUVBLElBQU1BLEtBQUtDLFFBQVEsSUFBUixDQUFYO0FBQ0EsSUFBTUMsS0FBS0QsUUFBUSxJQUFSLENBQVg7O0FBRUE7QUFDQSxTQUFTRSxRQUFULENBQW1CQyxRQUFuQixFQUE2QkMsS0FBN0IsRUFBb0M7QUFDbEMsU0FBT0gsOEJBQUc7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLGlCQUNKRyxLQURJO0FBQUE7QUFBQTtBQUFBOztBQUFBO0FBQUEsbUJBRUEsc0JBQVksVUFBQ0MsT0FBRCxFQUFVQyxNQUFWO0FBQUEscUJBQ2hCUCxHQUFHUSxLQUFILENBQVNKLFFBQVQsRUFBbUIsS0FBbkIsRUFBMEIsVUFBQ0ssR0FBRDtBQUFBLHVCQUN4QkEsTUFBTUYsT0FBT0UsR0FBUCxDQUFOLEdBQW9CSCxTQURJO0FBQUEsZUFBMUIsQ0FEZ0I7QUFBQSxhQUFaLENBRkE7O0FBQUE7QUFBQTtBQUFBLG1CQVFGLHNCQUFZLFVBQUNBLE9BQUQsRUFBVUMsTUFBVjtBQUFBLHFCQUNoQlAsR0FBR1UsTUFBSCxDQUFVTixRQUFWLEVBQW9CLFVBQUNLLEdBQUQ7QUFBQSx1QkFDbEJBLE1BQU1GLE9BQU9FLEdBQVAsQ0FBTixHQUFvQkgsU0FERjtBQUFBLGVBQXBCLENBRGdCO0FBQUEsYUFBWixDQVJFOztBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLEdBQUgsRUFBUDtBQWNEOztBQUVESyxPQUFPQyxPQUFQLEdBQWlCVCxRQUFqQiIsImZpbGUiOiJkb191bmxpbmsuanMiLCJzb3VyY2VSb290IjoibGliIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAZnVuY3Rpb24gZG9VbmxpbmtcbiAqIEByZXR1cm5zIHtQcm9taXNlfVxuICovXG4ndXNlIHN0cmljdCdcblxuY29uc3QgZnMgPSByZXF1aXJlKCdmcycpXG5jb25zdCBjbyA9IHJlcXVpcmUoJ2NvJylcblxuLyoqIEBsZW5kcyBkb1VubGluayAqL1xuZnVuY3Rpb24gZG9VbmxpbmsgKGZpbGVuYW1lLCBmb3JjZSkge1xuICByZXR1cm4gY28oZnVuY3Rpb24gKiAoKSB7XG4gICAgaWYgKGZvcmNlKSB7XG4gICAgICB5aWVsZCBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PlxuICAgICAgICBmcy5jaG1vZChmaWxlbmFtZSwgJzY2NicsIChlcnIpID0+XG4gICAgICAgICAgZXJyID8gcmVqZWN0KGVycikgOiByZXNvbHZlKClcbiAgICAgICAgKVxuICAgICAgKVxuICAgIH1cbiAgICB5aWVsZCBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PlxuICAgICAgZnMudW5saW5rKGZpbGVuYW1lLCAoZXJyKSA9PlxuICAgICAgICBlcnIgPyByZWplY3QoZXJyKSA6IHJlc29sdmUoKVxuICAgICAgKVxuICAgIClcbiAgfSlcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBkb1VubGlua1xuIl19