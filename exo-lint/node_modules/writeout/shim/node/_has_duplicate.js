/**
 * @function _hasDuplicate
 * @returns {Promsie}
 */

'use strict';

var _regenerator = require('babel-runtime/regenerator');

var _regenerator2 = _interopRequireDefault(_regenerator);

var _promise = require('babel-runtime/core-js/promise');

var _promise2 = _interopRequireDefault(_promise);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var fs = require('fs');
var co = require('co');

/** @lends _hasDuplicate */
function _hasDuplicate(filename, content) {
  return co(_regenerator2.default.mark(function _callee() {
    var exists, existing;
    return _regenerator2.default.wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            _context.next = 2;
            return new _promise2.default(function (resolve) {
              return fs.exists(filename, function (exists) {
                return resolve(exists);
              });
            });

          case 2:
            exists = _context.sent;

            if (exists) {
              _context.next = 5;
              break;
            }

            return _context.abrupt('return', false);

          case 5:
            _context.next = 7;
            return new _promise2.default(function (resolve, reject) {
              return fs.readFile(filename, function (err, content) {
                return err ? reject(err) : resolve(content);
              });
            });

          case 7:
            existing = _context.sent;
            return _context.abrupt('return', String(existing) === String(content));

          case 9:
          case 'end':
            return _context.stop();
        }
      }
    }, _callee, this);
  }));
}

module.exports = _hasDuplicate;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9oYXNfZHVwbGljYXRlLmpzIl0sIm5hbWVzIjpbImZzIiwicmVxdWlyZSIsImNvIiwiX2hhc0R1cGxpY2F0ZSIsImZpbGVuYW1lIiwiY29udGVudCIsInJlc29sdmUiLCJleGlzdHMiLCJyZWplY3QiLCJyZWFkRmlsZSIsImVyciIsImV4aXN0aW5nIiwiU3RyaW5nIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7O0FBS0E7Ozs7Ozs7Ozs7OztBQUVBLElBQU1BLEtBQUtDLFFBQVEsSUFBUixDQUFYO0FBQ0EsSUFBTUMsS0FBS0QsUUFBUSxJQUFSLENBQVg7O0FBRUE7QUFDQSxTQUFTRSxhQUFULENBQXdCQyxRQUF4QixFQUFrQ0MsT0FBbEMsRUFBMkM7QUFDekMsU0FBT0gsOEJBQUc7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxtQkFDVyxzQkFBWSxVQUFDSSxPQUFEO0FBQUEscUJBQzdCTixHQUFHTyxNQUFILENBQVVILFFBQVYsRUFBb0IsVUFBQ0csTUFBRDtBQUFBLHVCQUFZRCxRQUFRQyxNQUFSLENBQVo7QUFBQSxlQUFwQixDQUQ2QjtBQUFBLGFBQVosQ0FEWDs7QUFBQTtBQUNKQSxrQkFESTs7QUFBQSxnQkFJSEEsTUFKRztBQUFBO0FBQUE7QUFBQTs7QUFBQSw2Q0FLQyxLQUxEOztBQUFBO0FBQUE7QUFBQSxtQkFPYSxzQkFBWSxVQUFDRCxPQUFELEVBQVVFLE1BQVY7QUFBQSxxQkFDL0JSLEdBQUdTLFFBQUgsQ0FBWUwsUUFBWixFQUFzQixVQUFDTSxHQUFELEVBQU1MLE9BQU47QUFBQSx1QkFDcEJLLE1BQU1GLE9BQU9FLEdBQVAsQ0FBTixHQUFvQkosUUFBUUQsT0FBUixDQURBO0FBQUEsZUFBdEIsQ0FEK0I7QUFBQSxhQUFaLENBUGI7O0FBQUE7QUFPSk0sb0JBUEk7QUFBQSw2Q0FZREMsT0FBT0QsUUFBUCxNQUFxQkMsT0FBT1AsT0FBUCxDQVpwQjs7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxHQUFILEVBQVA7QUFjRDs7QUFFRFEsT0FBT0MsT0FBUCxHQUFpQlgsYUFBakIiLCJmaWxlIjoiX2hhc19kdXBsaWNhdGUuanMiLCJzb3VyY2VSb290IjoibGliIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAZnVuY3Rpb24gX2hhc0R1cGxpY2F0ZVxuICogQHJldHVybnMge1Byb21zaWV9XG4gKi9cblxuJ3VzZSBzdHJpY3QnXG5cbmNvbnN0IGZzID0gcmVxdWlyZSgnZnMnKVxuY29uc3QgY28gPSByZXF1aXJlKCdjbycpXG5cbi8qKiBAbGVuZHMgX2hhc0R1cGxpY2F0ZSAqL1xuZnVuY3Rpb24gX2hhc0R1cGxpY2F0ZSAoZmlsZW5hbWUsIGNvbnRlbnQpIHtcbiAgcmV0dXJuIGNvKGZ1bmN0aW9uICogKCkge1xuICAgIGxldCBleGlzdHMgPSB5aWVsZCBuZXcgUHJvbWlzZSgocmVzb2x2ZSkgPT5cbiAgICAgIGZzLmV4aXN0cyhmaWxlbmFtZSwgKGV4aXN0cykgPT4gcmVzb2x2ZShleGlzdHMpKVxuICAgIClcbiAgICBpZiAoIWV4aXN0cykge1xuICAgICAgcmV0dXJuIGZhbHNlXG4gICAgfVxuICAgIGxldCBleGlzdGluZyA9IHlpZWxkIG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+XG4gICAgICBmcy5yZWFkRmlsZShmaWxlbmFtZSwgKGVyciwgY29udGVudCkgPT5cbiAgICAgICAgZXJyID8gcmVqZWN0KGVycikgOiByZXNvbHZlKGNvbnRlbnQpXG4gICAgICApXG4gICAgKVxuICAgIHJldHVybiBTdHJpbmcoZXhpc3RpbmcpID09PSBTdHJpbmcoY29udGVudClcbiAgfSlcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBfaGFzRHVwbGljYXRlXG4iXX0=