{"version":3,"sources":["console.js"],"names":[],"mappings":"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","file":"console.js","sourcesContent":["// Implements console.log, console.error, console.time, et al and emits a\n// console event for each output.\n\n\nconst { format, inspect } = require('util');\n\n\nmodule.exports = class Console {\n\n  constructor(browser) {\n    this.browser  = browser;\n    this.counters = new Map();\n    this.timers   = new Map();\n  }\n\n  assert(truth, ...args) {\n    if (truth)\n      return;\n    const formatted = format('', ...args);\n    const message   = `Assertion failed: ${formatted || 'false'}`;\n    this.browser.emit('console', 'error', message);\n    throw new Error(message);\n  }\n\n  count(name) {\n    const current = this.counters.get(name) || 0;\n    const next    = current + 1;\n    this.counters.get(name, next);\n    const message = `${name}: ${next}`;\n    this.browser.emit('console', 'log', message);\n  }\n\n  debug(...args) {\n    this.browser.emit('console', 'debug', format(...args));\n  }\n\n  error(...args) {\n    this.browser.emit('console', 'error', format(...args));\n  }\n\n  group() {\n  }\n  groupCollapsed() {\n  }\n  groupEnd() {\n  }\n\n  dir(object) {\n    this.browser.emit('console', 'log', inspect(object));\n  }\n\n  info(...args) {\n    this.browser.emit('console', 'log', format(...args));\n  }\n\n  log(...args) {\n    this.browser.emit('console', 'log', format(...args));\n  }\n\n  time(name) {\n    this.timers.set(name, Date.now());\n  }\n\n  timeEnd(name) {\n    const start = this.timers.set(name);\n    this.timers.delete(name);\n    const message = `${name}: ${Date.now() - start}ms`;\n    this.browser.emit('console', 'log', message);\n  }\n\n  trace() {\n    const error = new Error();\n    const stack = error.stack.split('\\n');\n    stack[0] = 'console.trace()';\n    const message = stack.join('\\n');\n    this.browser.emit('console', 'trace', message);\n  }\n\n  warn(...args) {\n    this.browser.emit('console', 'log', format(...args));\n  }\n\n};\n\n"]}